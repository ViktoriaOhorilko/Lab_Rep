openapi: "3.0.1"
info:
  description: "Notes server"
  version: "1.0.0"
  title: "Notebook"
  contact:
    email: viktoriaohorilko@gmail.com

servers:
- url: https://notes.io/api
- url: http://notes.io/api

tags:
- name: user
  description: Operations with user
- name: statistic
  description: User statistic
- name: note
  description: Operations with note


paths:

  /user:

    post:
      tags:
      - user
      summary: Sign in a user
      operationId: createuser
      requestBody:
        description: A new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createuser'
        required: true
      responses:
        200:
          description: Successful sign in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        405:
          description: "Invalid input"
      security:
        - ApiKeyAuth: [ ]


  /user/log_in:

    get:
      tags:
      - user
      summary: Log in a user
      operationId: log_in
      responses:
        200:
          description: Successful log in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        405:
          description: "Log in crashed! Invalid login/password."
      security:
        - ApiKeyAuth: [ ]



  /user/log_out:

    get:
      tags:
      - user
      summary: "Logs out current logged in user session"
      operationId: log_out
      parameters: []
      responses:
        200:
          description: Successful log out
        405:
          description: "Log out crashed!"
      security:
        - ApiKeyAuth: [ ]



  /user/{user_id}:
    get:
      tags:
      - user
      summary: Get User by id
      operationId: getUser
      parameters:
      - name: user_id
        in: path
        description: 'User ID'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Target user
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/User'
                    - $ref: '#/components/schemas/MessageStatistic'
        400:
          description: "Invalid ID supplied"
        404:
          description: "User is not found"
      security:
        - ApiKeyAuth: [ ]

    put:
      tags:
      - user
      summary: Updates a user
      operationId: updateUser
      parameters:
      - name: user_id
        in: path
        description: 'Id of a target user'
        required: true
        schema:
          type: integer
      requestBody:
        description: User data to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        200:
          description: Creation status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        400:
          description: "Invalid ID supplied"
      security:
        - ApiKeyAuth: [ ]

    delete:
      tags:
      - user
      summary: Delete a user
      operationId: deleteUser
      parameters:
      - name: user_id
        in: path
        description: 'Id of a target user'
        required: true
        schema:
          type: integer
      responses:
        400:
          description: "Invalid ID supplied"
      security:
      - ApiKeyAuth: [ ]




  /statistic/{user_id}:

    post:
      tags:
      - statistic
      summary: Add statistic
      operationId: add_statistic
      parameters:
      - name: user_id
        in: path
        description: 'User ID'
        required: true
        schema:
          type: integer
      requestBody:
        description: Add new statistic
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageStatistic'
        required: true
      responses:
        200:
          description: Successful sign in
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageStatistic'
        405:
          description: "Invalid input"
      security:
        - ApiKeyAuth: [ ]

    get:
      tags:
      - statistic
      summary: Show statistic list
      operationId: show_statistic
      parameters:
      - name: user_id
        in: path
        description: 'User ID'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successful showed list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MessageStatistic'
        405:
          description: "Operation crashed!"
      security:
        - ApiKeyAuth: [ ]

    put:
      tags:
      - statistic
      summary: Edit statictic
      operationId: editStatictic
      parameters:
      - name: user_id
        in: path
        description: 'Id of a target user'
        required: true
        schema:
          type: integer
      requestBody:
        description: Note data to edit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatisticEdit'
        required: true
      responses:
        200:
          description: Edit status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        400:
          description: "Invalid ID supplied"
      security:
        - ApiKeyAuth: [ ]



  /note/{user_id}:

    post:
      tags:
      - note
      summary: Add new note
      operationId: add_note
      parameters:
      - name: user_id
        in: path
        description: 'User ID'
        required: true
        schema:
          type: integer
      requestBody:
        description: Add new note
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
        required: true
      responses:
        200:
          description: Successful sign in
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Note'
                    - $ref: '#/components/schemas/MessageStatistic'
        405:
          description: "Invalid input"
      security:
        - ApiKeyAuth: [ ]

    get:
      tags:
      - note
      summary: Show note
      operationId: show_note
      parameters:
      - name: user_id
        in: path
        description: 'User ID'
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Successful showed note
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Note'
                    - $ref: '#/components/schemas/MessageStatistic'
        405:
          description: "Operation crashed!"
      security:
        - ApiKeyAuth: [ ]

    put:
      tags:
      - note
      summary: Edit note
      operationId: editNote
      parameters:
      - name: user_id
        in: path
        description: 'Id of a target user'
        required: true
        schema:
          type: integer
      requestBody:
        description: Note data to edit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteEdit'
        required: true
      responses:
        200:
          description: Edit status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        400:
          description: "Invalid ID supplied"
      security:
        - ApiKeyAuth: [ ]

    delete:
      tags:
      - note
      summary: Delete a note
      operationId: deleteNote
      parameters:
      - name: user_id
        in: path
        description: 'Id of a target user'
        required: true
        schema:
          type: integer
      responses:
        400:
          description: "Invalid ID supplied"
      security:
      - ApiKeyAuth: [ ]



  /note/{tag}:

    get:
      tags:
      - note
      summary: Show notes by tag
      operationId: show_note_by_tag
      parameters:
      - name: tag
        in: path
        description: 'Tag'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful showed note
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Note'
                    - $ref: '#/components/schemas/MessageStatistic'
        405:
          description: "Operation crashed!"
      security:
        - ApiKeyAuth: [ ]




components:
  schemas:
    createuser:
      required:
      - login
      - password
      - user_name
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        user_name:
          type: string

    User:
      required:
      - login
      - password
      - user_name
      - id
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        user_name:
          type: string
        id:
          type: string

    UserUpdate:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        user_name:
          type: string

    StatusResponse:
      required:
      - code
      type: object
      properties:
        code:
          type: integer
        type:
          type: string
        message:
          type: string

    MessageStatistic:
      required:
      - note_id
      - edit_history
      - num_of_editions
      type: object
      properties:
        note_id:
          type: string
        edit_history:
          type: string
        num_of_editions:
          type: integer

    StatisticEdit:
      type: object
      properties:
        note_id:
          type: string
        edit_history:
          type: string
        num_of_editions:
          type: integer

    Note:
      required:
      - text
      - list_of_available_editors
      - author_id
      - tag
      type: object
      properties:
        text:
          type: string
        list_of_available_editors:
          type: string
        author_id:
          type: string
        tag:
          type: string

    NoteEdit:
      type: object
      properties:
        text:
          type: string
        list_of_available_editors:
          type: string
        author_id:
          type: string
        tag:
          type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key